// ○ 배열 : matlab의 기본적 데이터형
	// ● matlab 특징
		// 1. 모든 변수 or 문자열 저장 by 배열
		// 2. 배열 크기 할당 불필요
		// 3. 기본적으로 ◆ 행벡터 출력 ◆ ♣
	// ● 배열 생성 방법 ♣
		// 1. [] 안에 원소 입력
		// 2. 외부 데이터 파일의 행렬 받음
		// 3. 명령어 or 자신이 만든 m파일 이용
	// ● 1차원 배열
		// 1. 행벡터
			// a = [5, 7, 6, 4]
			// a = [5 7 6 4]
		// 2. 열벡터
			// a = [3; 4; 5]
			// a = [3
			// 4
			// 5]
		// 3. 전치
			// a = [3, 4 5]'
			// >> a = [3; 4; 5]
		// 4. 제한값 지정 간격이 일정한 벡터 ♣
			// a = [첫 번째 원소: 간격: 마지막 원소]
			// a = 첫 번째 원소: 간격: 마지막 원소
				// - 간격 생략 : 간격 1
				// - 마지막 원소 : 제한 값

			// a = [1: 5: 13]
			// >> a = 1, 6, 11
		// 5. 원소 개수 지정 간격이 일정한 벡터 ♣ linespace가 아니라 linspace다!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			// a = linspace(첫 번째 원소, 마지막 원소, 원소 개수)
				// - 간격 : 간격 (마지막 원소 - 첫 번째 원소)/(n - 1)
				// - 원소 개수 생략 : 원소 100개 생성
			// a = logspace(b, c, 원소 개수) ♣
				// - 간격 : 10^b와 10^c 사이 n개 로그적으로 같은 간격
				// - 원소 개수 생략 : 원소 100개 생성

			// a = linspace(2, 14, 6)
			// >> a = 2 4.4 6.8 9.2 11.6 14.0

	// ● 2차원 배열
		// 1. 행렬
			// a = [5 7 6 4; 8 4 0 -4]
			// A = [5, 7, 6, 4; 5 7 6 4; linspace(8, -4, 4)
			// 8:-4:-4; a] ♣
		// 2. 전치
			// a = [3 4 5; 30, 40, 50]'
			// >> a = [3 30; 4 40; 5 50]
		// 3. 다양한 함수
			// 1) 원소 0. mxn 행렬
				// zeros(m, n)
			// 2) 원소 1. mxn 행렬
				// ones(m, n)
			// 3) nxn 단위 행렬
				// eye(n)
			// 4) 행 or 열 벡터 개수 ♣
				// length(a) >> m or n
				// max(size(a)) >> m or n
				// end >> m or n
			// 5) 행렬 크기
				// [m n] = size(A)
				// [~, n] = size(A)
					// ~ : 출력값 무시
				// [m, ~] = size(A)
					// ~ : 출력값 무시
			// 6) 행렬 크기 중 더 큰 값
				// max(size(A)) >> m or n
		// 4. 원소 추출
			// - 원소는 1부터 시작 ♣♣

			// 1) 벡터 원소 추출
				// a(행1 or 열1) : 원소 1개
				// a(행1:행2 or 열1:열2) : 범위 원소
				// a(행1 or 열1:간격:행2 or 열2) : 일정 간격 원소 ♣
				// a([행1, 행2... or 열1, 열2...]) : 지정 원소 추출 시 [] ♣♣ a(행1, 행2... or 열1, 열2...) 이건 불가능 ♣♣
				// a(:) : 모든 원소 >> ◆ 열벡터 출력 ◆ ♣♣♣♣♣♣♣♣♣♣
			// 2) 행렬 원소 추출
				// A(행1, 열1) : 원소 1개
				// A(행1:행2, 열1:열2) : 범위 원소
				// A(:, 열1:열2) : 범위 원소
				// A(행1:행2, :) : 범위 원소
				// A(:, :) : 모든 원소
				// A(원소 주소) : 원소 1개 >> 1열 1행 > 1열 2행 ... > 2열 1행... > 3열 순서로 count ♣
				// A([행1, 행2...], [열1, 열2...]) : 지정 원소 추출 시 [] ♣♣ A(행1, 행2... or 열1, 열2...) 이건 불가능 ♣♣
				// A(:) : 모든 원소 >> ◆ 열벡터 출력 ◆ ♣♣♣♣♣♣♣♣♣♣
		// 5. 원소 변경
			// - 크기를 벗어난 원소 입력 시 0으로 채움
			// 1) 원소 합치기 ♣♣
				// G = [A B]
				// G = [A ; B]
			// 2) 원소 변경 ♣ 크기를 벗어나면 오류 뜰 수 있으니 주의해야한다
				// 원소 추출 식 = 원소
			// 3) 원소 삭제 ♣
				// 원소 추출 식 = []

				// - 행렬 중간 사이 부분 원소 삭제 불가 ♣♣
				// - 벡터 중간 사이 부분 원소 삭제 가능 ♣♣
				// - 행렬의 크기를 벗어난 원소 삽입 시 나머지 0으로 채워짐 ♣♣
				// - 벡터의 크기를 벗어난 원소 삽입 시 나머지 0으로 채워짐 ♣♣
		// 6. 문자열 : 배열로 저장
			// 1) 문자열
				// '문자 or 숫자 or 기호 or 공백'
			// 2) 문자열 내 따옴표
				// 'I''m a student' ♣♣

// a = [1 2 3] >> 1 2 3 ♣
// a= 1:1:3 >> 1 2 3 ♣
// a = 1 2 3 >> 오류 ♣♣
// a = 1, 2, 3 >> 오류 ♣♣